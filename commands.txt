Setup: https://www.codingforentrepreneurs.com/blog/google-cloud-cli-and-sdk-setup
https://github.com/codingforentrepreneurs/Serverless-Container-Based-Python-App-on-Google-Cloud-Run
https://www.codingforentrepreneurs.com/blog/google-secrets-python-decouple-github-actions



Commands
gcloud --version
gcloud components update
gcloud auth login
gcloud config set project ai-practice-471423

gcloud --version
docker --version 
git --version 
python --version 

mkdir -p ~/dev/serverless-python
cd /dev/serverless-python
git init
--------------------------------------------
requirements.txt
FastAPI
gunicorn
uvicorn
python-decouple
--------------------------------------------
python -m venv venv
venv\Scripts\activate
pip install -r requirements.txt
python.exe -m pip install --upgrade pip
=============================
# Create a simple FastAPI
=============================
mkdir src/
cd src/
touch app.py
-----------------------------
vi app.py 

from fastapi import FastAPI

app = FastAPI()

@app.get("/")
def home_page():
    return {"Hello": "World"}
-----------------------------
To run: uvicorn src.main:app
-----------------------------
# Display mode
-----------------------------
from fastapi import FastAPI

MODE = "dev"

app = FastAPI()

@app.get("/")
def home_page():
    return {"Hello": "World", "mode": MODE}
-----------------------------
To run: uvicorn src.main:app
-----------------------------
=> main.py
import os 
from fastapi import FastAPI
from src.env import config

#MODE = os.environ.get("MODE") or "dev"
MODE = config("MODE", cast = str, default = "testing")

app = FastAPI()

@app.get("/")
def home_page():
    return {"Hello": "World", "mode": MODE}

=> .env
MODE=dev

=> env.py 
import pathlib 
from functools import lru_cache
from decouple import Config, RepositoryEnv

BASE_DIR = pathlib.Path(__file__).parent.parent
print(BASE_DIR)
ENV_PATH = BASE_DIR / ".env"
print(ENV_PATH)

@lru_cache()
def get_config():
    if ENV_PATH.exists(): 
        return Config(RepositoryEnv(ENV_PATH))
    from decouple import config
    return config

config = get_config()

=> To run: uvicorn src.main:app

# Setting up shortcut in rav
=> main.py 
import os 
from fastapi import FastAPI
from src.env import config

#MODE = os.environ.get("MODE") or "dev"
MODE = config("MODE", cast = str, default = "testing")

app = FastAPI()

@app.get("/")
def home_page():
    return {"Hello": "World", "mode": MODE}


=> env.py 
import pathlib 
from functools import lru_cache
from decouple import Config, RepositoryEnv

BASE_DIR = pathlib.Path(__file__).parent.parent
print(BASE_DIR)
ENV_PATH = BASE_DIR / ".env"
print(ENV_PATH)

@lru_cache()
def get_config():
    if ENV_PATH.exists(): 
        return Config(RepositoryEnv(ENV_PATH))
    from decouple import config
    return config

config = get_config()

=> tests.py 
from fastapi.testclient import TestClient
from src.main import app 

client = TestClient(app)

def test_get_home_status():
    path = "/"
    response = client.get(path)
    status_code = response.status_code
    content_type = response.headers['content-type']
    assert status_code == 200
    assert content_type == "application/json"

rav.yaml
scripts:
  runserver: uvicorn src.main:app --reload
  installs: python -m pip install -r requirements.txt
  test: pytest src/tests.py
  build: docker build 

=> requirements.txt
FastAPI
gunicorn
uvicorn
python-decouple
pytest
httpx

=> Commands to run 
rav run runserver
rav run installs
rav run test
#===========================================
# Docker and containerization of Python apps
#===========================================



rav run build-run
git status
git add .
git commit -m "commit"
git branch -M main
git remote add origin https://github.com/sreekanthmuni66/serverless-python.git
git push -u origin main
git add .
git commit -m "commit"
git push -u origin main
  
  
  